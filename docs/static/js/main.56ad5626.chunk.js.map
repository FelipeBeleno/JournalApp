{"version":3,"sources":["types/types.js","reducers/notesReducers.js","reducers/uiReducer.js","store/store.js","reducers/authReducer.js","firebase/firebase-config.js","helpers/loadNotes.js","helpers/fileUpload.js","actions/notes.js","components/journal/JournalEntry.js","components/journal/JournalEntries.js","actions/ui.js","actions/auth.js","components/journal/Sidebar.js","components/notes/NotesAppBar.js","hooks/useForm.js","components/notes/NoteScreen.js","components/journal/NothingSelected.js","components/journal/JournalScreen.js","components/auth/LoginSreen.js","components/auth/RegisterScreen.js","routers/AuthRouter.js","routers/PrivateRoute.js","routers/PublicRoute.js","routers/AppRouter.js","JournalApp.js","index.js"],"names":["types","login","logout","uiSetError","uiRemoveError","uiStartLoading","uiFinishLoading","notesAddNew","notesActive","notesLoad","notesUpdated","notesFileUrl","notesDelete","notesLogoutCleaning","inicialState","notes","active","initialState","loading","msgError","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","reducers","combineReducers","auth","state","action","type","uid","payload","name","displayName","ui","notesUpdate","map","note","id","store","createStore","applyMiddleware","thunk","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","db","firestore","googleAuthProvider","GoogleAuthProvider","loadNotes","a","collection","get","notesSnap","forEach","snapHijo","push","data","fileUpload","file","formData","FormData","append","fetch","method","body","resp","ok","json","cloudResp","secure_url","activeNote","addNewNote","setNotes","startSaveNote","dispatch","getState","url","noteToFirestore","doc","update","refreshNote","Swal","fire","title","deleteNote","JournalEntry","date","noteDate","moment","useDispatch","className","onClick","style","backgroundSize","backgroundImage","format","JournalEntries","useSelector","key","setError","err","finishLoading","startLoginEmailPassword","email","password","signInWithEmailAndPassword","then","user","catch","e","console","log","message","Sidebar","signOut","newNote","Date","getTime","add","NotesAppBar","display","onChange","target","files","text","allowOutsideClick","onBeforeOpen","showLoading","fileUrl","close","startUploading","document","querySelector","click","useForm","useState","values","setValues","reset","newFormState","handleInputChange","value","NoteScreen","formValues","activeId","useRef","useEffect","current","placeholder","autoComplete","src","alt","delete","startDeleting","NothingSelected","JournalScreen","LoginSreen","onSubmit","preventDefault","disabled","signInWithPopup","to","RegisterScreen","password2","isFormValid","trim","length","validator","isEmail","createUserWithEmailAndPassword","updateProfile","startRegisterWithEmailPasswordName","AuthRouter","exact","path","component","PrivateRoute","isLoggedIn","Component","rest","props","PublicRoute","AppRouter","checking","setChecking","setIsLoggedIn","onAuthStateChanged","JournalApp","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.56ad5626.chunk.js","sourcesContent":["\n\nexport const types = {\n\n    login: '[Auth] Login',\n    logout: '[Auth] Logout',\n\n    uiSetError: '[UI] Set Error',\n    uiRemoveError: '[UI] Remove Error',\n\n    uiStartLoading: '[UI] Start loading',\n    uiFinishLoading: '[UI] Finish loading',\n\n    notesAddNew: '[Notes] New note',\n    notesActive: '[Notes] Set active note',\n    notesLoad: '[Notes] Load notes',\n    notesUpdated: '[Notes] Updated note',\n    notesFileUrl: '[Notes] Updated image url',\n    notesDelete: '[Notes] Delete note',\n    notesLogoutCleaning: '[Notes] Logout Cleaning',\n\n}","\r\n/* \r\n    notes: [],\r\n    active: null(activo por defecto sera null, \r\n        para cambiar el estado hay que inicializar la nota)\r\n    active: {\r\n        id: '',\r\n        body: '',\r\n        imagenUrl: '',\r\n        date: ''\r\n    }\r\n\r\n*/\r\n\r\nimport { types } from \"../types/types\";\r\n\r\n\r\n//estado incial\r\n\r\nconst inicialState = {\r\n    notes: [],\r\n    active: null\r\n}\r\nexport const notesReducers = (state = inicialState, action) => {\r\n\r\n    switch (action.type) {\r\n\r\n        case types.notesActive:\r\n            return {\r\n                ...state,\r\n                active: {\r\n                    ...action.payload\r\n                }\r\n            }\r\n\r\n        case types.notesLoad:\r\n            return {\r\n                ...state,\r\n\r\n                notes: [...action.payload]\r\n\r\n            }\r\n\r\n        case types.notesUpdate:\r\n            return {\r\n                ...state,\r\n                notes: state.notes.map(\r\n                    note => note.id === action.payload.id\r\n                        ? action.payload.note\r\n                        : note\r\n                )\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n\r\n\r\n}\r\n// una vez terminado el reducer hay que enviar el reducer al store donde se encuentra todo el\r\n// estado de las apps","import { types } from '../types/types';\n\nconst initialState = {\n    loading: false,\n    msgError: null\n}\n\n\nexport const uiReducer = ( state = initialState, action ) => {\n\n    switch ( action.type ) {\n        case types.uiSetError:\n            return {\n                ...state,\n                msgError: action.payload\n            }\n\n        case types.uiRemoveError:\n                return {\n                    ...state,\n                    msgError: null\n                }\n\n        case types.uiStartLoading:\n            return {\n                ...state,\n                loading: true\n            }\n \n        case types.uiFinishLoading:\n            return {\n                ...state,\n                loading: false\n            }\n\n        default:\n            return state;\n    }\n\n}\n","import { createStore, combineReducers, applyMiddleware, compose } from 'redux';\r\nimport thunk from \"redux-thunk\";\r\n\r\nimport { authReducer } from '../reducers/authReducer';\r\nimport { notesReducers } from '../reducers/notesReducers';\r\nimport { uiReducer } from '../reducers/uiReducer';\r\n\r\n// Es para admitir la configuracion del midellware y la configuracio de redux en las herramientas de \r\n// desarrollo\r\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\r\nconst reducers = combineReducers({\r\n    auth: authReducer,\r\n    ui: uiReducer,\r\n    notes: notesReducers\r\n});\r\n\r\n\r\n//createStore solo recibe un reducer, si tenemos muchos hay que\r\n//combinarlos con el el combineReducers\r\nexport const store = createStore(\r\n    reducers,\r\n    composeEnhancers(\r\n        applyMiddleware(thunk)\r\n    )\r\n);","import { types } from '../types/types';\n/*\n    {\n        uid: 'jagdfjahdsf127362718',\n        name: 'Fernando'\n    }\n\n*/\nexport const authReducer = ( state = {}, action ) => {\n\n    switch ( action.type ) {\n        case types.login:\n            return {\n                uid: action.payload.uid,\n                name: action.payload.displayName\n            }\n\n        case types.logout:\n                return { }\n    \n        default:\n            return state;\n    }\n\n}","import firebase from \"firebase/app\";\r\nimport 'firebase/firestore';\r\nimport 'firebase/auth';\r\n\r\n\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyAbOHxpgchVzRIT8D6ZemnbhS4d429ApD0\",\r\n    authDomain: \"react-apps-b5dfb.firebaseapp.com\",\r\n    databaseURL: \"https://react-apps-b5dfb.firebaseio.com\",\r\n    projectId: \"react-apps-b5dfb\",\r\n    storageBucket: \"react-apps-b5dfb.appspot.com\",\r\n    messagingSenderId: \"163521323955\",\r\n    appId: \"1:163521323955:web:2d91742a9953589986a1c6\"\r\n};\r\n// Initialize Firebase\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\n\r\nconst db = firebase.firestore();\r\nconst googleAuthProvider = new firebase.auth.GoogleAuthProvider();\r\n\r\n\r\nexport{\r\n    db,\r\n    googleAuthProvider,\r\n    firebase\r\n}\r\n","import { db } from '../firebase/firebase-config';\n\n\n\nexport const loadNotes = async ( uid ) => {\n\n    const notesSnap = await db.collection(`${ uid }/journal/notes`).get();\n    const notes = [];\n\n    notesSnap.forEach( snapHijo => {\n        notes.push({\n            id: snapHijo.id,\n            ...snapHijo.data()\n        })\n    });\n    \n    return notes;\n}\n\n\n\n","\n\nexport const fileUpload = async ( file ) => {\n\n    const cloudUrl = 'https://api.cloudinary.com/v1_1/dx0pryfzn/upload';\n\n    const formData = new FormData();\n    formData.append('upload_preset','react-journal');\n    formData.append('file', file );\n\n    try {\n        \n        const resp = await fetch( cloudUrl, {\n            method: 'POST',\n            body: formData\n        });\n\n        if ( resp.ok ) {\n            const cloudResp = await resp.json();\n            return cloudResp.secure_url;\n        } else {\n            throw await resp.json();\n        }\n\n    } catch (err) {\n        throw err;\n    }\n\n\n    // return url de la imagen\n}","import Swal from 'sweetalert2';\n\nimport { db } from '../firebase/firebase-config';\nimport { types } from '../types/types';\nimport { loadNotes } from '../helpers/loadNotes';\nimport { fileUpload } from '../helpers/fileUpload';\n\n\nexport const startNewNote = () => {\n    return async( dispatch, getState ) => {\n\n        const { uid } = getState().auth;\n        \n        const newNote = {\n            title: '',\n            body: '',\n            date: new Date().getTime()\n        }\n\n        const doc = await db.collection(`${ uid }/journal/notes`).add( newNote );\n\n        dispatch( activeNote( doc.id, newNote ) );\n        dispatch( addNewNote( doc.id, newNote ) );\n\n    }\n}\n\nexport const activeNote = ( id, note ) => ({\n    type: types.notesActive,\n    payload: {\n        id,\n        ...note\n    }\n});\n\nexport const addNewNote = ( id, note ) => ({\n    type: types.notesAddNew,\n    payload: {\n        id, ...note\n    }\n})\n\n\nexport const startLoadingNotes = ( uid ) => {\n    return async( dispatch ) => {\n        \n        const notes = await loadNotes( uid );\n        dispatch( setNotes( notes ) );\n\n    }\n}\n\n\nexport const setNotes = ( notes ) => ({\n    type: types.notesLoad,\n    payload: notes\n});\n\n\nexport const startSaveNote = ( note ) => {\n    return async( dispatch, getState ) => {\n\n        const { uid } = getState().auth;\n\n        if ( !note.url ){\n            delete note.url;\n        }\n\n        const noteToFirestore = { ...note };\n        delete noteToFirestore.id;\n\n        await db.doc(`${ uid }/journal/notes/${ note.id }`).update( noteToFirestore );\n\n        dispatch( refreshNote( note.id, noteToFirestore ) );\n        Swal.fire('Saved', note.title, 'success');\n    }\n}\n\nexport const refreshNote = ( id, note ) => ({\n    type: types.notesUpdated,\n    payload: {\n        id,\n        note: {\n            id,\n            ...note\n        }\n    }\n});\n\n\nexport const startUploading = ( file ) => {\n    return async( dispatch, getState ) => {\n\n        const { active:activeNote } = getState().notes;\n\n        Swal.fire({\n            title: 'Uploading...',\n            text: 'Please wait...',\n            allowOutsideClick: false,\n            onBeforeOpen: () => {\n                Swal.showLoading();\n            }\n        });\n\n        const fileUrl = await fileUpload( file );\n        activeNote.url = fileUrl;\n\n        dispatch( startSaveNote( activeNote ) )\n        \n\n        Swal.close();\n    }\n}\n\n\nexport const startDeleting = ( id ) => {\n    return async( dispatch, getState ) => {\n         \n        const uid = getState().auth.uid;\n        await db.doc(`${ uid }/journal/notes/${ id }`).delete();\n\n        dispatch( deleteNote(id) );\n\n    }\n}\n\nexport const deleteNote = (id) => ({\n    type: types.notesDelete,\n    payload: id\n});\n\n\nexport const noteLogout = () => ({\n    type: types.notesLogoutCleaning\n});\n","import React from 'react';\nimport moment from 'moment';\nimport { useDispatch } from 'react-redux';\nimport { activeNote } from '../../actions/notes';\n\nexport const JournalEntry = ({ id, date, title, body, url }) => {\n\n    const noteDate = moment(date);\n    const dispatch = useDispatch();\n\n    const handleEntryClick = () => {\n        dispatch( \n            activeNote( id, {\n                date, title, body, url\n            })\n        );\n    }\n\n    return (\n        <div \n            className=\"journal__entry pointer animate__animated animate__fadeIn animate__faster\"\n            onClick={ handleEntryClick }\n        >\n            \n            {\n                url &&\n                <div \n                    className=\"journal__entry-picture\"\n                    style={{\n                        backgroundSize: 'cover',\n                        backgroundImage: `url(${ url })`\n                    }}\n                ></div>\n            }\n\n            <div className=\"journal__entry-body\">\n                <p className=\"journal__entry-title\">\n                    { title }\n                </p>\n                <p className=\"journal__entry-content\">\n                    { body }\n                </p>\n            </div>\n\n            <div className=\"journal__entry-date-box\">\n                <span> { noteDate.format('dddd') } </span>\n                <h4> { noteDate.format('Do') } </h4>\n            </div>\n\n        </div>\n    )\n}\n","import React from 'react'\nimport { useSelector } from 'react-redux';\nimport { JournalEntry } from './JournalEntry';\n\nexport const JournalEntries = () => {\n\n    const { notes } = useSelector( state => state.notes );\n\n    return (\n        <div className=\"journal__entries\">\n            \n            {\n                notes.map( note => (\n                    <JournalEntry \n                        key={ note.id }\n                        { ...note }\n                    />\n                ))\n            }\n\n        </div>\n    )\n}\n","import { types } from '../types/types';\n\nexport const setError = ( err ) => ({\n    type: types.uiSetError,\n    payload: err\n});\n\nexport const removeError = () => ({\n    type: types.uiRemoveError\n});\n\nexport const startLoading = () => ({\n    type: types.uiStartLoading\n})\nexport const finishLoading = () => ({\n    type: types.uiFinishLoading\n})\n\n","import Swal from 'sweetalert2';\n\nimport { firebase, googleAuthProvider } from '../firebase/firebase-config';\nimport { types } from '../types/types';\nimport { startLoading, finishLoading } from './ui';\nimport { noteLogout } from './notes';\n\n\nexport const startLoginEmailPassword = (email, password) => {\n    return (dispatch) => {\n\n        dispatch( startLoading() );\n        \n        \n        firebase.auth().signInWithEmailAndPassword( email, password )\n            .then( ({ user }) => {\n                dispatch(login( user.uid, user.displayName ));\n\n                dispatch( finishLoading() );\n            })\n            .catch( e => {\n                console.log(e);\n                dispatch( finishLoading() );\n                Swal.fire('Error', e.message, 'error');\n            })\n\n        \n        \n    }\n}\n\nexport const startRegisterWithEmailPasswordName = ( email, password, name ) => {\n    return ( dispatch ) => {\n\n        firebase.auth().createUserWithEmailAndPassword( email, password )\n            .then( async({ user }) => {\n\n                await user.updateProfile({ displayName: name });\n\n                dispatch(\n                    login( user.uid, user.displayName )\n                );\n            })\n            .catch( e => {\n                console.log(e);\n                Swal.fire('Error', e.message, 'error');\n            })\n\n    }\n}\n\n\n\nexport const startGoogleLogin = () => {\n    return ( dispatch ) => {\n\n        firebase.auth().signInWithPopup( googleAuthProvider )\n            .then( ({ user }) => {\n                dispatch(\n                    login( user.uid, user.displayName )\n                )\n            });\n\n    }\n}\n\n\nexport const login = (uid, displayName) => ({\n    type: types.login,\n    payload: {\n        uid,\n        displayName\n    }\n});\n\n\nexport const startLogout = () => {\n    return async( dispatch ) => {\n        await firebase.auth().signOut();\n\n        dispatch( logout() );\n        dispatch( noteLogout() );\n    }\n}\n\n\nexport const logout = () => ({\n    type: types.logout\n})\n\n\n","import React from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\n\nimport { JournalEntries } from './JournalEntries'\nimport { startLogout } from '../../actions/auth';\nimport { startNewNote } from '../../actions/notes';\n\nexport const Sidebar = () => {\n\n    const dispatch = useDispatch();\n    const { name } = useSelector( state => state.auth );\n\n    const hanleLogout = () => {\n        dispatch( startLogout() )\n    }\n\n    const handleAddNew = () => {\n        dispatch( startNewNote() );\n    }\n\n    return (\n        <aside className=\"journal__sidebar\">\n            \n            <div className=\"journal__sidebar-navbar\">\n                <h3 className=\"mt-5\">\n                    <i className=\"far fa-moon\"></i>\n                    <span> { name }</span>\n                </h3>\n\n                <button \n                    className=\"btn\"\n                    onClick={ hanleLogout }\n                >\n                    Logout\n                </button>\n            </div>\n\n            <div \n                className=\"journal__new-entry\"\n                onClick={ handleAddNew }\n            >\n                <i className=\"far fa-calendar-plus fa-5x\"></i>\n                <p className=\"mt-5\">\n                    New entry\n                </p>\n            </div>\n\n            <JournalEntries />    \n\n        </aside>\n    )\n}\n","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { startSaveNote, startUploading } from '../../actions/notes';\n\nexport const NotesAppBar = () => {\n\n    const dispatch = useDispatch();\n    const { active } = useSelector( state => state.notes );\n\n    const handleSave = () => {\n        dispatch( startSaveNote( active ) );\n    }\n\n    const handlePictureClick = () => {\n        document.querySelector('#fileSelector').click();\n    }\n    \n    const handleFileChange = (e) => {\n        const file = e.target.files[0];\n        if ( file ) {\n            dispatch( startUploading( file ) );\n        }\n    }\n\n    return (\n        <div className=\"notes__appbar\">\n            <span>28 de agosto 2020</span>\n\n            <input \n                id=\"fileSelector\"\n                type=\"file\"\n                name=\"file\"\n                style={{ display: 'none' }}\n                onChange={ handleFileChange }\n            />\n\n            <div>\n                <button \n                    className=\"btn\"\n                    onClick={ handlePictureClick }\n                >\n                    Picture\n                </button>\n\n                <button \n                    className=\"btn\"\n                    onClick={ handleSave }\n                >\n                    Save\n                </button>\n            </div>\n        </div>\n    )\n}\n","import { useState } from 'react';\n\n\nexport const useForm = ( initialState = {} ) => {\n    \n    const [values, setValues] = useState(initialState);\n\n    const reset = ( newFormState = initialState ) => {\n        setValues( newFormState );\n    }\n\n\n    const handleInputChange = ({ target }) => {\n\n        setValues({\n            ...values,\n            [ target.name ]: target.value\n        });\n\n    }\n\n    return [ values, handleInputChange, reset ];\n\n}","import React, { useEffect, useRef } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport { NotesAppBar } from './NotesAppBar';\nimport { useForm } from '../../hooks/useForm';\nimport { activeNote, startDeleting } from '../../actions/notes';\n\nexport const NoteScreen = () => {\n\n    const dispatch = useDispatch();\n\n    const { active:note } = useSelector( state => state.notes );\n    const [ formValues, handleInputChange, reset ] = useForm( note );\n    const { body, title, id } = formValues;\n\n    const activeId = useRef( note.id );\n\n    useEffect(() => {\n        \n        if ( note.id !== activeId.current ) {\n            reset( note );\n            activeId.current = note.id\n        }\n\n    }, [note, reset])\n\n    useEffect(() => {\n        \n        dispatch( activeNote( formValues.id, { ...formValues } ) );\n\n    }, [formValues, dispatch])\n\n\n    const handleDelete = () => {\n        dispatch( startDeleting( id ) );\n    }\n\n\n    return (\n        <div className=\"notes__main-content\">\n            \n            <NotesAppBar />\n\n            <div className=\"notes__content\">\n\n                <input \n                    type=\"text\"\n                    placeholder=\"Some awesome title\"\n                    className=\"notes__title-input\"\n                    autoComplete=\"off\"\n                    name=\"title\"\n                    value={ title }\n                    onChange={ handleInputChange }\n                />\n\n                <textarea\n                    placeholder=\"What happened today\"\n                    className=\"notes__textarea\"\n                    name=\"body\"\n                    value={ body }\n                    onChange={ handleInputChange }\n                ></textarea>\n\n                {\n                    (note.url) \n                    && (\n                        <div className=\"notes__image\">\n                            <img \n                                src={ note.url }\n                                alt=\"imagen\"\n                            />\n                        </div>\n                    )\n                }\n\n\n            </div>\n\n\n            <button \n                className=\"btn btn-danger\"\n                onClick={ handleDelete }\n            >\n                Delete\n            </button>\n\n        </div>\n    )\n}\n","import React from 'react'\n\nexport const NothingSelected = () => {\n    return (\n        <div className=\"nothing__main-content\">\n            <p>\n                Select something\n                <br />\n                pr create an entry!\n            </p>\n\n            <i className=\"far fa-star fa-4x mt-5\"></i>\n\n        </div>\n    )\n}\n","import React from 'react';\nimport { Sidebar } from './Sidebar';\nimport { NoteScreen } from '../notes/NoteScreen';\nimport { NothingSelected } from './NothingSelected';\nimport { useSelector } from 'react-redux';\n\n\nexport const JournalScreen = () => {\n\n    const { active } = useSelector( state => state.notes );\n\n\n    return (\n        <div \n            className=\"journal__main-content animate__animated animate__fadeIn animate__faster\"\n        >\n            \n            <Sidebar />\n\n\n            <main>\n\n                {\n                    ( active ) \n                        ? ( <NoteScreen /> )\n                        : ( <NothingSelected /> )\n                }\n\n            </main>\n\n\n        </div>\n    )\n}\n","import React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport { Link } from 'react-router-dom';\r\nimport { useForm } from '../../hooks/useForm';\r\nimport { startGoogleLogin, startLoginEmailPassword } from '../../actions/auth';\r\n\r\nexport const LoginSreen = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const { loading } = useSelector(state => state.ui);\r\n\r\n\r\n    const [values, handleInputChange] = useForm({\r\n        email: 'felipe@gmail.com',\r\n        password: '123456',\r\n\r\n\r\n    });\r\n\r\n    const { email, password } = values;\r\n\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        dispatch(startLoginEmailPassword(email, password));\r\n\r\n    }\r\n\r\n    const handleLoginGoogle = () => {\r\n\r\n        dispatch(startGoogleLogin());\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            <h3 className=\"auth__title\">Login</h3>\r\n            <br />\r\n\r\n\r\n\r\n            <form onSubmit={handleSubmit}>\r\n                <input\r\n                    className=\"auth__input\"\r\n                    autoComplete=\"off\"\r\n                    placeholder=\"Email\"\r\n                    type=\"text\"\r\n                    name=\"email\"\r\n                    value={email}\r\n                    onChange={handleInputChange}\r\n                />\r\n                <input\r\n                    className=\"auth__input\"\r\n                    placeholder=\"Password\"\r\n                    type=\"password\"\r\n                    name=\"password\"\r\n                    value={password}\r\n                    onChange={handleInputChange}\r\n                />\r\n\r\n\r\n                <button className=\"btn btn-primary btn-block\" type=\"submit\" disabled={loading}>\r\n                    Login\r\n                </button>\r\n                <div className=\"auth__social-networks\">\r\n                    <p>Ingresa con tus Redes Sociales</p>\r\n                    <div\r\n                        className=\"google-btn\"\r\n                        onClick={handleLoginGoogle}\r\n                    >\r\n                        <div className=\"google-icon-wrapper\">\r\n                            <img className=\"google-icon\" src=\"https://upload.wikimedia.org/wikipedia/commons/5/53/Google_%22G%22_Logo.svg\" alt=\"google button\" />\r\n                        </div>\r\n                        <p className=\"btn-text\">\r\n                            <b>Sign in with google</b>\r\n                        </p>\r\n                    </div>\r\n                </div>\r\n\r\n                <Link className=\"link\" to=\"/auth/register\">\r\n                    Crear Cuenta\r\n                </Link>\r\n\r\n            </form>\r\n\r\n        </>\r\n    )\r\n}\r\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { useDispatch, useSelector} from 'react-redux';\nimport validator from 'validator';\n\nimport { useForm } from '../../hooks/useForm';\nimport { setError, removeError } from '../../actions/ui';\nimport { startRegisterWithEmailPasswordName } from '../../actions/auth';\n\nexport const RegisterScreen = () => {\n\n    const dispatch = useDispatch();\n    const { msgError } = useSelector( state => state.ui );\n\n    const [ formValues, handleInputChange ] = useForm({\n        name: '',\n        email: '',\n        password: '',\n        password2: '',\n    });\n\n    const { name ,email ,password ,password2 } = formValues;\n\n    const handleRegister = (e) => {\n        e.preventDefault();\n\n        if ( isFormValid() ) {\n            dispatch( startRegisterWithEmailPasswordName(email, password, name) );\n        }\n\n    }\n\n    const isFormValid = () => {\n        \n        if ( name.trim().length === 0 ) {\n            dispatch( setError('Name is required') )\n            return false;\n        } else if ( !validator.isEmail( email ) ) {\n            dispatch( setError('Email is not valid') )\n            return false;\n        } else if ( password !== password2 || password.length < 5 ) {\n            dispatch( setError('Password should be at least 6 characters and match each other') )\n            return false\n        }\n        \n        dispatch( removeError() );\n       return true;\n    }\n\n    return (\n        <>\n            <h3 className=\"auth__title\">Register</h3>\n\n            <form \n                onSubmit={ handleRegister }\n                className=\"animate__animated animate__fadeIn animate__faster\"\n            >\n\n                {\n                    msgError &&\n                    (\n                        <div className=\"auth__alert-error\">\n                            { msgError }\n                        </div>\n                    )\n                }\n\n\n                <input \n                    type=\"text\"\n                    placeholder=\"Name\"\n                    name=\"name\"\n                    className=\"auth__input\"\n                    autoComplete=\"off\"\n                    value={ name }\n                    onChange={ handleInputChange }\n                />\n\n                <input \n                    type=\"text\"\n                    placeholder=\"Email\"\n                    name=\"email\"\n                    className=\"auth__input\"\n                    autoComplete=\"off\"\n                    value={ email }\n                    onChange={ handleInputChange }\n                />\n\n                <input \n                    type=\"password\"\n                    placeholder=\"Password\"\n                    name=\"password\"\n                    className=\"auth__input\"\n                    value={ password }\n                    onChange={ handleInputChange }\n                />\n\n                <input \n                    type=\"password\"\n                    placeholder=\"Confirm password\"\n                    name=\"password2\"\n                    className=\"auth__input\"\n                    value={ password2 }\n                    onChange={ handleInputChange }\n                />\n\n\n                <button\n                    type=\"submit\"\n                    className=\"btn btn-primary btn-block mb-5\"\n                >\n                    Register\n                </button>\n\n               \n\n                <Link \n                    to=\"/auth/login\"\n                    className=\"link\"\n                >\n                    Already registered?\n                </Link>\n\n            </form>\n        </>\n    )\n}\n","import React from 'react';\r\nimport { Redirect, Route, Switch } from 'react-router-dom';\r\nimport { LoginSreen } from '../components/auth/LoginSreen';\r\nimport { RegisterScreen } from '../components/auth/RegisterScreen';\r\n\r\nexport const AuthRouter = () => {\r\n    return (\r\n        <div className=\"auth__main\">\r\n            <div className=\"auth_box-container\">\r\n                <Switch>\r\n                    <Route exact path=\"/auth/login\" component={LoginSreen} />\r\n                    <Route exact path=\"/auth/register\" component={RegisterScreen} />\r\n                    <Redirect to=\"/auth/register\" />\r\n                </Switch>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { Redirect, Route } from 'react-router-dom';\r\nimport Proptypes from 'prop-types';\r\n\r\nexport const PrivateRoute = (\r\n    {\r\n        isLoggedIn,\r\n        component: Component,\r\n        ...rest\r\n    }) => {\r\n\r\n\r\n    return (\r\n        <Route {...rest}\r\n            component={(props) => {\r\n                return (\r\n                    (isLoggedIn)\r\n                        ? <Component {...props} />\r\n                        : <Redirect to='/auth/login' />\r\n                )\r\n\r\n            }\r\n            }\r\n\r\n\r\n\r\n\r\n\r\n        />\r\n\r\n\r\n    )\r\n}\r\n\r\nPrivateRoute.propTypes = {\r\n    isLoggedIn: Proptypes.bool.isRequired,\r\n    component: Proptypes.func.isRequired,\r\n\r\n}","import React from 'react';\r\nimport { Redirect, Route } from 'react-router-dom';\r\nimport Proptypes from 'prop-types';\r\n\r\nexport const PublicRoute = (\r\n    {\r\n        isLoggedIn,\r\n        component: Component,\r\n        ...rest\r\n    }) => {\r\n\r\n\r\n    return (\r\n        <Route {...rest}\r\n            component={(props) => {\r\n                return (\r\n                    (isLoggedIn)\r\n                        ? <Redirect to='/' />\r\n                        : <Component {...props} />\r\n                )\r\n\r\n            }\r\n            }\r\n\r\n\r\n\r\n\r\n\r\n        />\r\n\r\n\r\n    )\r\n}\r\n\r\nPublicRoute.propTypes = {\r\n    isLoggedIn: Proptypes.bool.isRequired,\r\n    component: Proptypes.func.isRequired,\r\n\r\n}","import React, { useEffect, useState } from 'react';\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Redirect\r\n} from \"react-router-dom\";\r\nimport { useDispatch } from 'react-redux';\r\nimport { JournalScreen } from '../components/journal/JournalScreen';\r\nimport { AuthRouter } from './AuthRouter';\r\n\r\nimport { firebase } from '../firebase/firebase-config';\r\nimport { login } from '../actions/auth';\r\nimport { PrivateRoute } from './PrivateRoute';\r\nimport { PublicRoute } from './PublicRoute';\r\nimport { startLoadingNotes } from '../actions/notes';\r\n\r\n\r\nexport const AppRouter = () => {\r\n\r\n\r\n    const dispatch = useDispatch()\r\n\r\n\r\n    const [checking, setChecking] = useState(true);\r\n\r\n    const [isLoggedIn, setIsLoggedIn] = useState(false);\r\n\r\n\r\n    useEffect(() => {\r\n        firebase.auth().onAuthStateChanged((user) => {\r\n            if (user?.uid) {\r\n                dispatch(login(user.uid, user.displayName));\r\n                setIsLoggedIn(true);\r\n                dispatch(startLoadingNotes(user.uid));\r\n\r\n\r\n            \r\n            } else {\r\n                setIsLoggedIn(false);\r\n            }\r\n            setChecking(false);\r\n        });\r\n    });\r\n\r\n\r\n    if (checking) {\r\n        return <h1>Loading ...</h1>\r\n    } else {\r\n        return (\r\n            <Router>\r\n                <Switch>\r\n                    <PublicRoute path=\"/auth\" component={AuthRouter} isLoggedIn={isLoggedIn} />\r\n\r\n                    <PrivateRoute exact path=\"/\" component={JournalScreen} isLoggedIn={isLoggedIn} />\r\n\r\n                    <Redirect to=\"/auth/login\" />\r\n\r\n                </Switch>\r\n\r\n            </Router>\r\n        )\r\n    }\r\n\r\n\r\n}\r\n","import React from 'react';\r\n\r\nimport { Provider } from \"react-redux\";\r\n\r\nimport { store } from './store/store';\r\nimport { AppRouter } from './routers/AppRouter';\r\n\r\n\r\n\r\nexport const JournalApp = () => {\r\n    return (\r\n        <div>\r\n            <Provider store={store}>\r\n                <AppRouter />\r\n            </Provider>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { JournalApp } from './JournalApp';\nimport './styles/styles.scss';\n\nReactDOM.render(\n  <JournalApp />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}